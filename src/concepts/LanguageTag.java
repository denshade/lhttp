package concepts;

import java.util.Arrays;

public class LanguageTag 
{
	private String languageAbreviation;
	private static final String[] possibleLanguages  = new String[] {
	"aa",
	"ab",
	"ae",
	"af",
	"ak",
	"am",
	"an",
	"ar",
	"as",
	"av",
	"ay",
	"az",
	"ba",
	"be",
	"bg",
	"bh",
	"bi",
	"bm",
	"bn",
	"bo",
	"br",
	"bs",
	"ca",
	"ce",
	"ch",
	"co",
	"cr",
	"cs",
	"cu",
	"cv",
	"cy",
	"da",
	"de",
	"dv",
	"dz",
	"ee",
	"el",
	"en",
	"eo",
	"es",
	"et",
	"eu",
	"fa",
	"ff",
	"fi",
	"fj",
	"fo",
	"fr",
	"fy",
	"ga",
	"gd",
	"gl",
	"gn",
	"gu",
	"gv",
	"ha",
	"he",
	"hi",
	"ho",
	"hr",
	"ht",
	"hu",
	"hy",
	"hz",
	"ia",
	"id",
	"ie",
	"ig",
	"ii",
	"ik",
	"io",
	"is",
	"it",
	"iu",
	"ja",
	"jv",
	"ka",
	"kg",
	"ki",
	"kj",
	"kk",
	"kl",
	"km",
	"kn",
	"ko",
	"kr",
	"ks",
	"ku",
	"kv",
	"kw",
	"ky",
	"la",
	"lb",
	"lg",
	"li",
	"ln",
	"lo",
	"lt",
	"lu",
	"lv",
	"mg",
	"mh",
	"mi",
	"mk",
	"ml",
	"mn",
	"mr",
	"ms",
	"mt",
	"my",
	"na",
	"nb",
	"nd",
	"ne",
	"ng",
	"nl",
	"nn",
	"no",
	"nr",
	"nv",
	"ny",
	"oc",
	"oj",
	"om",
	"or",
	"os",
	"pa",
	"pi",
	"pl",
	"ps",
	"pt",
	"qu",
	"rm",
	"rn",
	"ro",
	"ru",
	"rw",
	"sa",
	"sc",
	"sd",
	"se",
	"sg",
	"si",
	"sk",
	"sl",
	"sm",
	"sn",
	"so",
	"sq",
	"sr",
	"ss",
	"st",
	"su",
	"sv",
	"sw",
	"ta",
	"te",
	"tg",
	"th",
	"ti",
	"tk",
	"tl",
	"tn",
	"to",
	"tr",
	"ts",
	"tt",
	"tw",
	"ty",
	"ug",
	"uk",
	"ur",
	"uz",
	"ve",
	"vi",
	"vo",
	"wa",
	"wo",
	"xh",
	"yi",
	"yo",
	"za",
	"zh",
	"zu" };
	
	private static final String[] possibleCountryCodes = new String[] {
		"AF",
		"AL",
		"DZ",
		"AD",
		"AO",
		"AG",
		"AR",
		"AM",
		"AU",
		"AT",
		"AZ",
		"BS",
		"BH",
		"BD",
		"BB",
		"BY",
		"BE",
		"BZ",
		"BJ",
		"BT",
		"BO",
		"BA",
		"BW",
		"BR",
		"BN",
		"BG",
		"BF",
		"BI",
		"KH",
		"CM",
		"CA",
		"CV",
		"CF",
		"TD",
		"CL",
		"CN",
		"CO",
		"KM",
		"CD",
		"CG",
		"CR",
		"CI",
		"HR",
		"CU",
		"CY",
		"CZ",
		"DK",
		"DJ",
		"DM",
		"DO",
		"EC",
		"EG",
		"SV",
		"GQ",
		"ER",
		"EE",
		"ET",
		"FJ",
		"FI",
		"FR",
		"GA",
		"GM",
		"GE",
		"DE",
		"GH",
		"GR",
		"GD",
		"GT",
		"GN",
		"GW",
		"GY",
		"HT",
		"HN",
		"HU",
		"IS",
		"IN",
		"ID",
		"IR",
		"IQ",
		"IE",
		"IL",
		"IT",
		"JM",
		"JP",
		"JO",
		"KZ",
		"KE",
		"KI",
		"KP",
		"KR",
		"KW",
		"KG",
		"LA",
		"LV",
		"LB",
		"LS",
		"LR",
		"LY",
		"LI",
		"LT",
		"LU",
		"MK",
		"MG",
		"MW",
		"MY",
		"MV",
		"ML",
		"MT",
		"MH",
		"MR",
		"MU",
		"MX",
		"FM",
		"MD",
		"MC",
		"MN",
		"ME",
		"MA",
		"MZ",
		"MM",
		"NA",
		"NR",
		"NP",
		"NL",
		"NZ",
		"NI",
		"NE",
		"NG",
		"NO",
		"OM",
		"PK",
		"PW",
		"PA",
		"PG",
		"PY",
		"PE",
		"PH",
		"PL",
		"PT",
		"QA",
		"RO",
		"RU",
		"RW",
		"KN",
		"LC",
		"VC",
		"WS",
		"SM",
		"ST",
		"SA",
		"SN",
		"RS",
		"SC",
		"SL",
		"SG",
		"SK",
		"SI",
		"SB",
		"SO",
		"ZA",
		"ES",
		"LK",
		"SD",
		"SR",
		"SZ",
		"SE",
		"CH",
		"SY",
		"TJ",
		"TZ",
		"TH",
		"TL",
		"TG",
		"TO",
		"TT",
		"TN",
		"TR",
		"TM",
		"TV",
		"UG",
		"UA",
		"AE",
		"GB",
		"US",
		"UY",
		"UZ",
		"VU",
		"VA",
		"VE",
		"VN",
		"YE",
		"ZM",
		"ZW",
		"GE",
		"TW",
		"AZ",
		"CY",
		"MD",
		"SO",
		"GE",
		"AU",
		"CX",
		"CC",
		"AU",
		"HM",
		"NF",
		"NC",
		"PF",
		"YT",
		"GP",
		"GP",
		"PM",
		"WF",
		"TF",
		"PF",
		"BV",
		"CK",
		"NU",
		"TK",
		"GG",
		"IM",
		"JE",
		"AI",
		"BM",
		"IO",
		"VG",
		"KY",
		"FK",
		"GI",
		"MS",
		"PN",
		"SH",
		"GS",
		"TC",
		"MP",
		"PR",
		"AS",
		"UM",
		"GU",
		"UM",
		"VI",
		"UM",
		"HK",
		"MO",
		"FO",
		"GL",
		"GF",
		"GP",
		"MQ",
		"RE",
		"AX",
		"AW",
		"AN",
		"SJ",
		"AC",
		"TA",
		"AQ"	
	};
	private String countryCode;
		
	public LanguageTag(final String code)
	{
		String[] parts = code.split("-");
		if (parts.length < 1 || parts.length > 2) 
		{
			throw new IllegalArgumentException("Invalid format: Expected one or two parts for - " + code);
		}
		languageAbreviation = parts[0];
		if (!Arrays.asList(possibleLanguages).contains(languageAbreviation))
		{
			throw new IllegalArgumentException("Unknown language " + languageAbreviation);
		}
		if (parts.length > 1)
		{			
			countryCode 		= parts[1];	
			if (!Arrays.asList(possibleCountryCodes).contains(countryCode.toUpperCase()))
			{
				throw new IllegalArgumentException("Unknown country code " + countryCode);
			}
		}
	}
	
	public String getLanguageAbreviation() {
		return languageAbreviation;
	}
	
	public String getCountryCode() {
		return countryCode;
	}	
	
}
